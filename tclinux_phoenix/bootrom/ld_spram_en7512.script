/*OUTPUT_FORMAT("elf32-tradbigmips")
OUTPUT_ARCH(mips)*/
ENTRY(__start)
SECTIONS
{
  /* Read-only sections, merged into text segment: */
  . = 0xbfc00000;
  .init          : { *(.init)		} =0
  .text      :
  {
    _ftext = . ;
    *(.text)
    *(.rodata)
    *(.rodata1)
    /* .gnu.warning sections are handled specially by elf32.em.  */
    *(.gnu.warning)
  } =0
  .data    :
  {
    _fdata = . ;
    *(.data)

   /* Align the move_data on page boundaries. */
   . = ALIGN(4);
   __move_data_start = .;
   *(.move_data)
   __move_data_end = .;
   . = ALIGN(4);
   
   /* Align the boot2 on page boundaries. */
   . = ALIGN(4);
   __boot2_start = .;
   *(.boot2)
   __boot2_end = .;
   . = ALIGN(4);   
    
   /* Align the lzma decompressor on page boundaries. */
   . = ALIGN(4);
   __lzma_start = .;
   *(.lzma)
   __lzma_end = .;
   . = ALIGN(4);
   

   
   /* Align the ddr calibration bin on page boundaries. */
   . = ALIGN(4);
   __spram_start = .;
   *(.spram)
   __spram_end = .;
   . = ALIGN(4);   
     

   /* Align the initial ramdisk image (INITRD) on page boundaries. */
   . = ALIGN(4);
   __boot_start = .;
   *(.initrd)
   __boot_end = .;
   . = ALIGN(4);   

    CONSTRUCTORS
  }
  __bss_start = .;
  _fbss = .;
  .sbss      : { *(.sbss) *(.scommon) }
  .bss       :
  {
   *(.bss)
   *(COMMON)
  }

}
