/*
 * Generated by gdbus-codegen 2.32.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __PINGTEST_GENERATED_H__
#define __PINGTEST_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.ctc.igd1.PingTest */

#define CTC_TYPE_PING_TEST (ctc_ping_test_get_type ())
#define CTC_PING_TEST(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), CTC_TYPE_PING_TEST, ctcPingTest))
#define CTC_IS_PING_TEST(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), CTC_TYPE_PING_TEST))
#define CTC_PING_TEST_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), CTC_TYPE_PING_TEST, ctcPingTestIface))

struct _ctcPingTest;
typedef struct _ctcPingTest ctcPingTest;
typedef struct _ctcPingTestIface ctcPingTestIface;

struct _ctcPingTestIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_start_test) (
    ctcPingTest *object,
    GDBusMethodInvocation *invocation);

  gboolean  (*get_ping_result) (ctcPingTest *object);

  gboolean  (*get_ping_status) (ctcPingTest *object);

};

GType ctc_ping_test_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *ctc_ping_test_interface_info (void);
guint ctc_ping_test_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void ctc_ping_test_complete_start_test (
    ctcPingTest *object,
    GDBusMethodInvocation *invocation,
    guint restult,
    const gchar *errdesc);



/* D-Bus method calls: */
void ctc_ping_test_call_start_test (
    ctcPingTest *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean ctc_ping_test_call_start_test_finish (
    ctcPingTest *proxy,
    guint *out_restult,
    gchar **out_errdesc,
    GAsyncResult *res,
    GError **error);

gboolean ctc_ping_test_call_start_test_sync (
    ctcPingTest *proxy,
    guint *out_restult,
    gchar **out_errdesc,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean ctc_ping_test_get_ping_status (ctcPingTest *object);
void ctc_ping_test_set_ping_status (ctcPingTest *object, gboolean value);

gboolean ctc_ping_test_get_ping_result (ctcPingTest *object);
void ctc_ping_test_set_ping_result (ctcPingTest *object, gboolean value);


/* ---- */

#define CTC_TYPE_PING_TEST_PROXY (ctc_ping_test_proxy_get_type ())
#define CTC_PING_TEST_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), CTC_TYPE_PING_TEST_PROXY, ctcPingTestProxy))
#define CTC_PING_TEST_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), CTC_TYPE_PING_TEST_PROXY, ctcPingTestProxyClass))
#define CTC_PING_TEST_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), CTC_TYPE_PING_TEST_PROXY, ctcPingTestProxyClass))
#define CTC_IS_PING_TEST_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), CTC_TYPE_PING_TEST_PROXY))
#define CTC_IS_PING_TEST_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), CTC_TYPE_PING_TEST_PROXY))

typedef struct _ctcPingTestProxy ctcPingTestProxy;
typedef struct _ctcPingTestProxyClass ctcPingTestProxyClass;
typedef struct _ctcPingTestProxyPrivate ctcPingTestProxyPrivate;

struct _ctcPingTestProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  ctcPingTestProxyPrivate *priv;
};

struct _ctcPingTestProxyClass
{
  GDBusProxyClass parent_class;
};

GType ctc_ping_test_proxy_get_type (void) G_GNUC_CONST;

void ctc_ping_test_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ctcPingTest *ctc_ping_test_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
ctcPingTest *ctc_ping_test_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void ctc_ping_test_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
ctcPingTest *ctc_ping_test_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
ctcPingTest *ctc_ping_test_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define CTC_TYPE_PING_TEST_SKELETON (ctc_ping_test_skeleton_get_type ())
#define CTC_PING_TEST_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), CTC_TYPE_PING_TEST_SKELETON, ctcPingTestSkeleton))
#define CTC_PING_TEST_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), CTC_TYPE_PING_TEST_SKELETON, ctcPingTestSkeletonClass))
#define CTC_PING_TEST_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), CTC_TYPE_PING_TEST_SKELETON, ctcPingTestSkeletonClass))
#define CTC_IS_PING_TEST_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), CTC_TYPE_PING_TEST_SKELETON))
#define CTC_IS_PING_TEST_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), CTC_TYPE_PING_TEST_SKELETON))

typedef struct _ctcPingTestSkeleton ctcPingTestSkeleton;
typedef struct _ctcPingTestSkeletonClass ctcPingTestSkeletonClass;
typedef struct _ctcPingTestSkeletonPrivate ctcPingTestSkeletonPrivate;

struct _ctcPingTestSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  ctcPingTestSkeletonPrivate *priv;
};

struct _ctcPingTestSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType ctc_ping_test_skeleton_get_type (void) G_GNUC_CONST;

ctcPingTest *ctc_ping_test_skeleton_new (void);


G_END_DECLS

#endif /* __PINGTEST_GENERATED_H__ */
