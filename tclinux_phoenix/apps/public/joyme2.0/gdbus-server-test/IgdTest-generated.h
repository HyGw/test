/*
 * Generated by gdbus-codegen 2.41.1. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __IGDTEST_GENERATED_H__
#define __IGDTEST_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for com.ctc.igd1.Properties */

#define IGD_TEST_TYPE_PROPERTIES (igd_test_properties_get_type ())
#define IGD_TEST_PROPERTIES(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), IGD_TEST_TYPE_PROPERTIES, IgdTestProperties))
#define IGD_TEST_IS_PROPERTIES(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), IGD_TEST_TYPE_PROPERTIES))
#define IGD_TEST_PROPERTIES_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), IGD_TEST_TYPE_PROPERTIES, IgdTestPropertiesIface))

struct _IgdTestProperties;
typedef struct _IgdTestProperties IgdTestProperties;
typedef struct _IgdTestPropertiesIface IgdTestPropertiesIface;

struct _IgdTestPropertiesIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_test) (
    IgdTestProperties *object,
    GDBusMethodInvocation *invocation,
    guint arg_input);

  const gchar * (*get_result) (IgdTestProperties *object);

};

GType igd_test_properties_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *igd_test_properties_interface_info (void);
guint igd_test_properties_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void igd_test_properties_complete_test (
    IgdTestProperties *object,
    GDBusMethodInvocation *invocation,
    const gchar *output);



/* D-Bus method calls: */
void igd_test_properties_call_test (
    IgdTestProperties *proxy,
    guint arg_input,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean igd_test_properties_call_test_finish (
    IgdTestProperties *proxy,
    gchar **out_output,
    GAsyncResult *res,
    GError **error);

gboolean igd_test_properties_call_test_sync (
    IgdTestProperties *proxy,
    guint arg_input,
    gchar **out_output,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
const gchar *igd_test_properties_get_result (IgdTestProperties *object);
gchar *igd_test_properties_dup_result (IgdTestProperties *object);
void igd_test_properties_set_result (IgdTestProperties *object, const gchar *value);


/* ---- */

#define IGD_TEST_TYPE_PROPERTIES_PROXY (igd_test_properties_proxy_get_type ())
#define IGD_TEST_PROPERTIES_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), IGD_TEST_TYPE_PROPERTIES_PROXY, IgdTestPropertiesProxy))
#define IGD_TEST_PROPERTIES_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), IGD_TEST_TYPE_PROPERTIES_PROXY, IgdTestPropertiesProxyClass))
#define IGD_TEST_PROPERTIES_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), IGD_TEST_TYPE_PROPERTIES_PROXY, IgdTestPropertiesProxyClass))
#define IGD_TEST_IS_PROPERTIES_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), IGD_TEST_TYPE_PROPERTIES_PROXY))
#define IGD_TEST_IS_PROPERTIES_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), IGD_TEST_TYPE_PROPERTIES_PROXY))

typedef struct _IgdTestPropertiesProxy IgdTestPropertiesProxy;
typedef struct _IgdTestPropertiesProxyClass IgdTestPropertiesProxyClass;
typedef struct _IgdTestPropertiesProxyPrivate IgdTestPropertiesProxyPrivate;

struct _IgdTestPropertiesProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  IgdTestPropertiesProxyPrivate *priv;
};

struct _IgdTestPropertiesProxyClass
{
  GDBusProxyClass parent_class;
};

GType igd_test_properties_proxy_get_type (void) G_GNUC_CONST;

void igd_test_properties_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
IgdTestProperties *igd_test_properties_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
IgdTestProperties *igd_test_properties_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void igd_test_properties_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
IgdTestProperties *igd_test_properties_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
IgdTestProperties *igd_test_properties_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define IGD_TEST_TYPE_PROPERTIES_SKELETON (igd_test_properties_skeleton_get_type ())
#define IGD_TEST_PROPERTIES_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), IGD_TEST_TYPE_PROPERTIES_SKELETON, IgdTestPropertiesSkeleton))
#define IGD_TEST_PROPERTIES_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), IGD_TEST_TYPE_PROPERTIES_SKELETON, IgdTestPropertiesSkeletonClass))
#define IGD_TEST_PROPERTIES_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), IGD_TEST_TYPE_PROPERTIES_SKELETON, IgdTestPropertiesSkeletonClass))
#define IGD_TEST_IS_PROPERTIES_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), IGD_TEST_TYPE_PROPERTIES_SKELETON))
#define IGD_TEST_IS_PROPERTIES_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), IGD_TEST_TYPE_PROPERTIES_SKELETON))

typedef struct _IgdTestPropertiesSkeleton IgdTestPropertiesSkeleton;
typedef struct _IgdTestPropertiesSkeletonClass IgdTestPropertiesSkeletonClass;
typedef struct _IgdTestPropertiesSkeletonPrivate IgdTestPropertiesSkeletonPrivate;

struct _IgdTestPropertiesSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  IgdTestPropertiesSkeletonPrivate *priv;
};

struct _IgdTestPropertiesSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType igd_test_properties_skeleton_get_type (void) G_GNUC_CONST;

IgdTestProperties *igd_test_properties_skeleton_new (void);


/* ------------------------------------------------------------------------ */
/* Declarations for com.ctc.igd1.ObjectManager */

#define IGD_TEST_TYPE_OBJECT_MANAGER (igd_test_object_manager_get_type ())
#define IGD_TEST_OBJECT_MANAGER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), IGD_TEST_TYPE_OBJECT_MANAGER, IgdTestObjectManager))
#define IGD_TEST_IS_OBJECT_MANAGER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), IGD_TEST_TYPE_OBJECT_MANAGER))
#define IGD_TEST_OBJECT_MANAGER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), IGD_TEST_TYPE_OBJECT_MANAGER, IgdTestObjectManagerIface))

struct _IgdTestObjectManager;
typedef struct _IgdTestObjectManager IgdTestObjectManager;
typedef struct _IgdTestObjectManagerIface IgdTestObjectManagerIface;

struct _IgdTestObjectManagerIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_add) (
    IgdTestObjectManager *object,
    GDBusMethodInvocation *invocation);

  guint  (*get_instnum) (IgdTestObjectManager *object);

};

GType igd_test_object_manager_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *igd_test_object_manager_interface_info (void);
guint igd_test_object_manager_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void igd_test_object_manager_complete_add (
    IgdTestObjectManager *object,
    GDBusMethodInvocation *invocation,
    guint inst);



/* D-Bus method calls: */
void igd_test_object_manager_call_add (
    IgdTestObjectManager *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean igd_test_object_manager_call_add_finish (
    IgdTestObjectManager *proxy,
    guint *out_inst,
    GAsyncResult *res,
    GError **error);

gboolean igd_test_object_manager_call_add_sync (
    IgdTestObjectManager *proxy,
    guint *out_inst,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
guint igd_test_object_manager_get_instnum (IgdTestObjectManager *object);
void igd_test_object_manager_set_instnum (IgdTestObjectManager *object, guint value);


/* ---- */

#define IGD_TEST_TYPE_OBJECT_MANAGER_PROXY (igd_test_object_manager_proxy_get_type ())
#define IGD_TEST_OBJECT_MANAGER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), IGD_TEST_TYPE_OBJECT_MANAGER_PROXY, IgdTestObjectManagerProxy))
#define IGD_TEST_OBJECT_MANAGER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), IGD_TEST_TYPE_OBJECT_MANAGER_PROXY, IgdTestObjectManagerProxyClass))
#define IGD_TEST_OBJECT_MANAGER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), IGD_TEST_TYPE_OBJECT_MANAGER_PROXY, IgdTestObjectManagerProxyClass))
#define IGD_TEST_IS_OBJECT_MANAGER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), IGD_TEST_TYPE_OBJECT_MANAGER_PROXY))
#define IGD_TEST_IS_OBJECT_MANAGER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), IGD_TEST_TYPE_OBJECT_MANAGER_PROXY))

typedef struct _IgdTestObjectManagerProxy IgdTestObjectManagerProxy;
typedef struct _IgdTestObjectManagerProxyClass IgdTestObjectManagerProxyClass;
typedef struct _IgdTestObjectManagerProxyPrivate IgdTestObjectManagerProxyPrivate;

struct _IgdTestObjectManagerProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  IgdTestObjectManagerProxyPrivate *priv;
};

struct _IgdTestObjectManagerProxyClass
{
  GDBusProxyClass parent_class;
};

GType igd_test_object_manager_proxy_get_type (void) G_GNUC_CONST;

void igd_test_object_manager_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
IgdTestObjectManager *igd_test_object_manager_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
IgdTestObjectManager *igd_test_object_manager_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void igd_test_object_manager_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
IgdTestObjectManager *igd_test_object_manager_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
IgdTestObjectManager *igd_test_object_manager_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define IGD_TEST_TYPE_OBJECT_MANAGER_SKELETON (igd_test_object_manager_skeleton_get_type ())
#define IGD_TEST_OBJECT_MANAGER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), IGD_TEST_TYPE_OBJECT_MANAGER_SKELETON, IgdTestObjectManagerSkeleton))
#define IGD_TEST_OBJECT_MANAGER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), IGD_TEST_TYPE_OBJECT_MANAGER_SKELETON, IgdTestObjectManagerSkeletonClass))
#define IGD_TEST_OBJECT_MANAGER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), IGD_TEST_TYPE_OBJECT_MANAGER_SKELETON, IgdTestObjectManagerSkeletonClass))
#define IGD_TEST_IS_OBJECT_MANAGER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), IGD_TEST_TYPE_OBJECT_MANAGER_SKELETON))
#define IGD_TEST_IS_OBJECT_MANAGER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), IGD_TEST_TYPE_OBJECT_MANAGER_SKELETON))

typedef struct _IgdTestObjectManagerSkeleton IgdTestObjectManagerSkeleton;
typedef struct _IgdTestObjectManagerSkeletonClass IgdTestObjectManagerSkeletonClass;
typedef struct _IgdTestObjectManagerSkeletonPrivate IgdTestObjectManagerSkeletonPrivate;

struct _IgdTestObjectManagerSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  IgdTestObjectManagerSkeletonPrivate *priv;
};

struct _IgdTestObjectManagerSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType igd_test_object_manager_skeleton_get_type (void) G_GNUC_CONST;

IgdTestObjectManager *igd_test_object_manager_skeleton_new (void);


G_END_DECLS

#endif /* __IGDTEST_GENERATED_H__ */
