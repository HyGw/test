/*
 * Generated by gdbus-codegen 2.32.4. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __MYAPP_GENERATED_H__
#define __MYAPP_GENERATED_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for net.Corp.MyApp.Frobber */

#define MY_APP_TYPE_NET_CORP_MY_APP_FROBBER (my_app_net_corp_my_app_frobber_get_type ())
#define MY_APP_NET_CORP_MY_APP_FROBBER(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER, MyAppNetCorpMyAppFrobber))
#define MY_APP_IS_NET_CORP_MY_APP_FROBBER(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER))
#define MY_APP_NET_CORP_MY_APP_FROBBER_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER, MyAppNetCorpMyAppFrobberIface))

struct _MyAppNetCorpMyAppFrobber;
typedef struct _MyAppNetCorpMyAppFrobber MyAppNetCorpMyAppFrobber;
typedef struct _MyAppNetCorpMyAppFrobberIface MyAppNetCorpMyAppFrobberIface;

struct _MyAppNetCorpMyAppFrobberIface
{
  GTypeInterface parent_iface;



  gboolean (*handle_hello_world) (
    MyAppNetCorpMyAppFrobber *object,
    GDBusMethodInvocation *invocation,
    const gchar *arg_greeting);

  gboolean  (*get_verbose) (MyAppNetCorpMyAppFrobber *object);

  void (*notification) (
    MyAppNetCorpMyAppFrobber *object,
    const gchar *arg_icon_blob,
    gint arg_height,
    const gchar *const *arg_messages);

};

GType my_app_net_corp_my_app_frobber_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *my_app_net_corp_my_app_frobber_interface_info (void);
guint my_app_net_corp_my_app_frobber_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void my_app_net_corp_my_app_frobber_complete_hello_world (
    MyAppNetCorpMyAppFrobber *object,
    GDBusMethodInvocation *invocation,
    const gchar *response);



/* D-Bus signal emissions functions: */
void my_app_net_corp_my_app_frobber_emit_notification (
    MyAppNetCorpMyAppFrobber *object,
    const gchar *arg_icon_blob,
    gint arg_height,
    const gchar *const *arg_messages);



/* D-Bus method calls: */
void my_app_net_corp_my_app_frobber_call_hello_world (
    MyAppNetCorpMyAppFrobber *proxy,
    const gchar *arg_greeting,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean my_app_net_corp_my_app_frobber_call_hello_world_finish (
    MyAppNetCorpMyAppFrobber *proxy,
    gchar **out_response,
    GAsyncResult *res,
    GError **error);

gboolean my_app_net_corp_my_app_frobber_call_hello_world_sync (
    MyAppNetCorpMyAppFrobber *proxy,
    const gchar *arg_greeting,
    gchar **out_response,
    GCancellable *cancellable,
    GError **error);



/* D-Bus property accessors: */
gboolean my_app_net_corp_my_app_frobber_get_verbose (MyAppNetCorpMyAppFrobber *object);
void my_app_net_corp_my_app_frobber_set_verbose (MyAppNetCorpMyAppFrobber *object, gboolean value);


/* ---- */

#define MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_PROXY (my_app_net_corp_my_app_frobber_proxy_get_type ())
#define MY_APP_NET_CORP_MY_APP_FROBBER_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_PROXY, MyAppNetCorpMyAppFrobberProxy))
#define MY_APP_NET_CORP_MY_APP_FROBBER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_PROXY, MyAppNetCorpMyAppFrobberProxyClass))
#define MY_APP_NET_CORP_MY_APP_FROBBER_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_PROXY, MyAppNetCorpMyAppFrobberProxyClass))
#define MY_APP_IS_NET_CORP_MY_APP_FROBBER_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_PROXY))
#define MY_APP_IS_NET_CORP_MY_APP_FROBBER_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_PROXY))

typedef struct _MyAppNetCorpMyAppFrobberProxy MyAppNetCorpMyAppFrobberProxy;
typedef struct _MyAppNetCorpMyAppFrobberProxyClass MyAppNetCorpMyAppFrobberProxyClass;
typedef struct _MyAppNetCorpMyAppFrobberProxyPrivate MyAppNetCorpMyAppFrobberProxyPrivate;

struct _MyAppNetCorpMyAppFrobberProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  MyAppNetCorpMyAppFrobberProxyPrivate *priv;
};

struct _MyAppNetCorpMyAppFrobberProxyClass
{
  GDBusProxyClass parent_class;
};

GType my_app_net_corp_my_app_frobber_proxy_get_type (void) G_GNUC_CONST;

void my_app_net_corp_my_app_frobber_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
MyAppNetCorpMyAppFrobber *my_app_net_corp_my_app_frobber_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
MyAppNetCorpMyAppFrobber *my_app_net_corp_my_app_frobber_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void my_app_net_corp_my_app_frobber_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
MyAppNetCorpMyAppFrobber *my_app_net_corp_my_app_frobber_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
MyAppNetCorpMyAppFrobber *my_app_net_corp_my_app_frobber_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_SKELETON (my_app_net_corp_my_app_frobber_skeleton_get_type ())
#define MY_APP_NET_CORP_MY_APP_FROBBER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_SKELETON, MyAppNetCorpMyAppFrobberSkeleton))
#define MY_APP_NET_CORP_MY_APP_FROBBER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_SKELETON, MyAppNetCorpMyAppFrobberSkeletonClass))
#define MY_APP_NET_CORP_MY_APP_FROBBER_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_SKELETON, MyAppNetCorpMyAppFrobberSkeletonClass))
#define MY_APP_IS_NET_CORP_MY_APP_FROBBER_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_SKELETON))
#define MY_APP_IS_NET_CORP_MY_APP_FROBBER_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), MY_APP_TYPE_NET_CORP_MY_APP_FROBBER_SKELETON))

typedef struct _MyAppNetCorpMyAppFrobberSkeleton MyAppNetCorpMyAppFrobberSkeleton;
typedef struct _MyAppNetCorpMyAppFrobberSkeletonClass MyAppNetCorpMyAppFrobberSkeletonClass;
typedef struct _MyAppNetCorpMyAppFrobberSkeletonPrivate MyAppNetCorpMyAppFrobberSkeletonPrivate;

struct _MyAppNetCorpMyAppFrobberSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  MyAppNetCorpMyAppFrobberSkeletonPrivate *priv;
};

struct _MyAppNetCorpMyAppFrobberSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType my_app_net_corp_my_app_frobber_skeleton_get_type (void) G_GNUC_CONST;

MyAppNetCorpMyAppFrobber *my_app_net_corp_my_app_frobber_skeleton_new (void);


G_END_DECLS

#endif /* __MYAPP_GENERATED_H__ */
